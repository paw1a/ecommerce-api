basePath: /api/v1
definitions:
  auth.AuthDetails:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  auth.RefreshInput:
    properties:
      fingerprint:
        type: string
      refreshToken:
        type: string
    type: object
  domain.Category:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  dto.AdminDTO:
    properties:
      email:
        type: string
      fingerprint:
        type: string
      password:
        type: string
    type: object
  dto.CreateProductDTO:
    properties:
      categories:
        items:
          $ref: '#/definitions/domain.Category'
        type: array
      description:
        type: string
      name:
        type: string
      price:
        type: number
    required:
    - name
    - price
    type: object
  dto.CreateReviewDTO:
    properties:
      rating:
        type: integer
      text:
        type: string
    type: object
  dto.CreateUserDTO:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  dto.UpdateProductDTO:
    properties:
      categories:
        items:
          $ref: '#/definitions/domain.Category'
        type: array
      description:
        type: string
      name:
        type: string
      price:
        type: number
      totalRating:
        type: number
    type: object
  dto.UpdateUserDTO:
    properties:
      name:
        type: string
    type: object
  v1.failure:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: invalid request body
        type: string
    type: object
  v1.success:
    properties:
      data: {}
    type: object
host: localhost:8080
info:
  contact:
    email: paw1a@yandex.ru
    name: API Support
    url: https://t.me/paw1a
  description: This is simple api of e-commerce shop
  title: E-commerce API
  version: "1.0"
paths:
  /admins/auth/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: admin credentials
        in: body
        name: refreshInput
        required: true
        schema:
          $ref: '#/definitions/auth.RefreshInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.AuthDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.failure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.failure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.failure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.failure'
      summary: Admin sign-in
      tags:
      - admin-auth
  /admins/auth/sign-in:
    post:
      consumes:
      - application/json
      parameters:
      - description: admin credentials
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/dto.AdminDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.AuthDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.failure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.failure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.failure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.failure'
      summary: Admin sign-in
      tags:
      - admin-auth
  /admins/products:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.success'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.failure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.failure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.failure'
      security:
      - AdminAuth: []
      summary: Get all products
      tags:
      - admin-products
    post:
      consumes:
      - application/json
      parameters:
      - description: product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.CreateProductDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v1.success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.failure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.failure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.failure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.failure'
      security:
      - AdminAuth: []
      summary: Create product
      tags:
      - admin-products
  /admins/products/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.failure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.failure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.failure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.failure'
      security:
      - AdminAuth: []
      summary: Delete product
      tags:
      - admin-products
    get:
      consumes:
      - application/json
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.failure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.failure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.failure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.failure'
      security:
      - AdminAuth: []
      summary: Get product by id
      tags:
      - admin-products
    put:
      consumes:
      - application/json
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      - description: product update fields
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateProductDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.failure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.failure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.failure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.failure'
      security:
      - AdminAuth: []
      summary: Update product
      tags:
      - admin-products
  /admins/products/{id}/reviews:
    get:
      consumes:
      - application/json
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.failure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.failure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.failure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.failure'
      security:
      - AdminAuth: []
      summary: Get product reviews list
      tags:
      - admin-products
  /admins/reviews:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.success'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.failure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.failure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.failure'
      security:
      - AdminAuth: []
      summary: Get all reviews
      tags:
      - admin-reviews
    post:
      consumes:
      - application/json
      parameters:
      - description: review
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/dto.CreateReviewDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v1.success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.failure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.failure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.failure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.failure'
      security:
      - AdminAuth: []
      summary: Create review
      tags:
      - admin-reviews
  /admins/reviews/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: review id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.failure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.failure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.failure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.failure'
      security:
      - AdminAuth: []
      summary: Delete review
      tags:
      - admin-reviews
    get:
      consumes:
      - application/json
      parameters:
      - description: review id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.failure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.failure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.failure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.failure'
      security:
      - AdminAuth: []
      summary: Get review by id
      tags:
      - admin-reviews
  /admins/users:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.success'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.failure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.failure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.failure'
      security:
      - AdminAuth: []
      summary: Get all users
      tags:
      - admin-users
    post:
      consumes:
      - application/json
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v1.success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.failure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.failure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.failure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.failure'
      security:
      - AdminAuth: []
      summary: Create user
      tags:
      - admin-users
  /admins/users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.failure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.failure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.failure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.failure'
      security:
      - AdminAuth: []
      summary: Delete user
      tags:
      - admin-users
    get:
      consumes:
      - application/json
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.failure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.failure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.failure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.failure'
      security:
      - AdminAuth: []
      summary: Get user by id
      tags:
      - admin-users
    put:
      consumes:
      - application/json
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      - description: user update fields
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.failure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.failure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.failure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.failure'
      security:
      - AdminAuth: []
      summary: Update user
      tags:
      - admin-users
securityDefinitions:
  AdminAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
