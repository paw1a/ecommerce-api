// Code generated by mockery v2.12.1. DO NOT EDIT.

package mocks_repository

import (
	context "context"

	domain "github.com/paw1a/ecommerce-api/internal/domain"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// Admins is an autogenerated mock type for the Admins type
type Admins struct {
	mock.Mock
}

// FindByCredentials provides a mock function with given fields: ctx, email, password
func (_m *Admins) FindByCredentials(ctx context.Context, email string, password string) (domain.Admin, error) {
	ret := _m.Called(ctx, email, password)

	var r0 domain.Admin
	if rf, ok := ret.Get(0).(func(context.Context, string, string) domain.Admin); ok {
		r0 = rf(ctx, email, password)
	} else {
		r0 = ret.Get(0).(domain.Admin)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string) error); ok {
		r1 = rf(ctx, email, password)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewAdmins creates a new instance of Admins. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewAdmins(t testing.TB) *Admins {
	mock := &Admins{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
